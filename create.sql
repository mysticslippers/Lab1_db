CREATE TYPE GENDERS AS ENUM(
    'MALE',
    'FEMALE',
    'NOT STATED'
);

CREATE TYPE OPERATIONS AS ENUM(
    'Cash withdrawal',
    'Cash deposit',
    'Credit',
    'Contribution'
);

CREATE TABLE IF NOT EXISTS Client(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    surname VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    register_time TIMESTAMP NOT NULL,
    gender GENDERS NOT NULL
);

CREATE TABLE IF NOT EXISTS Branch_Type(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    register_time TIMESTAMP NOT NULL,
    mission TEXT NOT NULL CONSTRAINT readable CHECK (char_length(mission) < 500)
);

CREATE TABLE IF NOT EXISTS Branch(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    managers_quantity BIGINT,
    proceeds DOUBLE PRECISION,
    branch_type_id BIGINT NOT NULL REFERENCES Branch_Type(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Manager(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    surname VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    gender GENDERS NOT NULL,
    experience DOUBLE PRECISION CONSTRAINT admissible CHECK (experience >= 0),
    free BOOLEAN NOT NULL,
    branch_id BIGINT NOT NULL REFERENCES Branch(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Account(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    total DOUBLE PRECISION,
    register_time TIMESTAMP NOT NULL,
    branch_id BIGINT NOT NULL REFERENCES Branch(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    client_id BIGINT NOT NULL REFERENCES Client(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Currency(
    id BIGSERIAL NOT NULL  PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    value_to_dollar DOUBLE PRECISION NOT NULL CONSTRAINT positive CHECK (value_to_dollar > 0)
);

CREATE TABLE IF NOT EXISTS Transaction(
    id BIGSERIAL NOT NULL PRIMARY KEY,
    total DOUBLE PRECISION NOT NULL CONSTRAINT positive CHECK (total >= 0),
    operation_type OPERATIONS NOT NULL,
    currency_id BIGINT NOT NULL REFERENCES Currency(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    account_id BIGINT NOT NULL REFERENCES Account(id) ON DELETE CASCADE ON UPDATE CASCADE
);